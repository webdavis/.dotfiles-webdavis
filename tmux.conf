# TPM manages all of the following plugins and will autoinstall them. It uses the
# following bindings:
# - prefix + I: installs plugins and refreshes tmux environment.
# - prefix + U: updates plugins.
# - prefix + alt + u: uninstalls plugins.
set-option -g @plugin 'tmux-plugins/tpm'             # Site: https://github.com/tmux-plugins/tpm
set-option -g @plugin 'tmux-plugins/tmux-sensible'   # https://github.com/tmux-plugins/tmux-sensible tmux-sensible
set-option -g @plugin 'wfxr/tmux-fzf-url'            # Site: https://github.com/wfxr/tmux-fzf-url {{{2
set-option -g @plugin 'tmux-plugins/tmux-yank'       # Site: https://github.com/tmux-plugins/tmux-yank
set-option -g @plugin 'Morantron/tmux-fingers'       # Site: https://github.com/Morantron/tmux-fingers
set-option -g @plugin 'tmux-plugins/tmux-copycat'    # Site: https://github.com/tmux-plugins/tmux-copycat
set-option -g @plugin 'tmux-plugins/tmux-sessionist' # Site: https://github.com/tmux-plugins/tmux-sessionist
set-option -g @plugin 'tmux-plugins/tmux-resurrect'  # Site: https://github.com/tmux-plugins/tmux-resurrect
set-option -g @plugin 'tmux-plugins/tmux-continuum'  # Site: https://github.com/tmux-plugins/tmux-continuum

# Allows tmux-resurrect to capture and restore pane contents.
set-option -g @resurrect-capture-pane-contents 'on'

# Restore vim-state in tmux using vim-obsession.
set-option -g @resurrect-strategy-vim 'session'
set-option -g @resurrect-strategy-nvim 'session'

# Ensure tmux-continuum auto-saves state.
set-option -g @continuum-restore 'on'

# Use fzf to quickly open urls in the browser.
set -g @fzf-url-bind 'C-t'

# Required for roxma/vim-tmux-clipboard to work correctly.
set-option -g focus-events on

# Ensure pane numbering is consistent with windows.
set-option -g pane-base-index 1

# Always resize Tmux panes to currently connected client.
set-option -g aggressive-resize

# Don't auto rename windows.
set-window-option -g automatic-rename off
set-option -g allow-rename off

# After a window is closed, sequentially update the numbers of the remaining windows.
set-option -g renumber-windows on

# Enable useful window titles.
set-option -g set-titles on
set-option -g set-titles-string "#H | #S:#W | #T"

# Increase terminal history limit.
set-option -g history-limit 10000

set-option -g set-clipboard external

# Enable mouse mode and provide bindings for managing it.
set -g mouse on
bind-key m set-option -g mouse on \; display 'Mouse: ON'
bind-key M set-option -g mouse off \; display 'Mouse: OFF' Enable mouse mode and provide bindings for managing it.

# Increase time allowed between key presses for repeat bindings. The default is 500 milliseconds.
set-option -g repeat-time 1500

# Overrides tmux-sensible, ensuring 24-bit color in nested Tmux sessions.
set-option -g default-terminal 'tmux-256color'
set-option -ga terminal-overrides ",xterm-256color-italic:Tc,tmux-256color-italic:Tc"

# Get rid of lag on escape key.
set-option -s escape-time 0

# Never obey terminal bell settings.
set-option -g bell-action none

# Change prefix key to "Ctrl + a".
unbind-key C-b
set-option -g prefix C-a

# Press C-a + C-a to pass a single C-a to the terminal. (This is necessary because the prefix key is C-a.)
bind-key C-a send-keys C-a

# When Ctrl hangs this conflicts with Vim, so stub it out.
bind-key a send-keys a
bind-key \ set-window-option synchronize-panes\; display-message "synchronize-panes is now #{?pane_synchronized,on,off}" # Toggle synchronizing input to panes.

# Find session.
bind-key C-f command-prompt -p find-session 'switch-client -t %%'

# Default behavior has a confirmation prompt which is annoying.
bind-key x kill-pane

# Combine the current pane with its adjacent pane.
bind-key j join-pane -t !

# clear-screen workaround. (vim-tmux-navigator uses C-l).
bind-key C-l send-keys 'C-l'

# Opens a new window like the default behavior; however, it opens it at the current path.
bind-key c new-window -c '#{pane_current_path}'

# Pastes from the system clipboard.
bind-key P run "xclip -o -sel clip | tmux load-buffer - ; tmux paste-buffer"
bind-key C-Z suspend-client

# Smart pane switching with awareness of Vim splits.
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l
bind-key -r C-h select-pane -L
bind-key -r C-j select-pane -D
bind-key -r C-k select-pane -U
bind-key -r C-l select-pane -R
bind-key -r C-\ select-pane -l

# Backup navigation bindings in case the vim-tmux-navigator fails (which may happen in nested Tmux sessions).
bind-key -r M-H select-pane -L
bind-key -r M-J select-pane -D
bind-key -r M-K select-pane -U
bind-key -r M-L select-pane -R

 # Enter Resize mode.
bind-key r switch-client -T RESIZE
bind-key -T RESIZE k resize-pane -U \; switch-client -T RESIZE
bind-key -T RESIZE j resize-pane -D \; switch-client -T RESIZE
bind-key -T RESIZE h resize-pane -L \; switch-client -T RESIZE
bind-key -T RESIZE l resize-pane -R \; switch-client -T RESIZE
bind-key -T RESIZE K resize-pane -U 5 \; switch-client -T RESIZE
bind-key -T RESIZE J resize-pane -D 5 \; switch-client -T RESIZE
bind-key -T RESIZE H resize-pane -L 5 \; switch-client -T RESIZE
bind-key -T RESIZE L resize-pane -R 5 \; switch-client -T RESIZE

# Set the look and feel.
set -g status "on"
set -g status-justify "left"
set -g display-panes-colour "black"
set -g display-panes-active-colour "blue"
set -g status-fg "colour250"
set -g status-bg "colour237"
set -g status-left "#[fg=colour250,bg=colour237]{#{pid}} [#S] #[fg=colour179,bg=colour237]#P:#{pane_current_command} "
set -g status-left-length "100"
set -g status-right ""
set -g status-right-length "100"
setw -g window-status-separator ""
setw -g window-status-format "#[fg-colour250,bg=colour237] #I:#W #F "
setw -g window-status-current-format "#[fg=colour237,bg=colour250,bold] #I:#W #F "

# Automatically install TPM if it isn't already.
if 'test ! -d $HOME/.tmux/plugins/tpm -a "$(command -v git)" != ""' \
  'run "git clone https://github.com/tmux-plugins/tpm $HOME/.tmux/plugins/tpm \
  && $HOME/.tmux/plugins/tpm/tpm && $HOME/.tmux/plugins/tpm/bin/install_plugins"'

# Initialize Tmux plugin manager (keep this line at the very bottom of tmux.conf).
run '~/.tmux/plugins/tpm/tpm'

# vi:filetype=tmux shiftwidth=5 tabstop=4 softtabstop=4:

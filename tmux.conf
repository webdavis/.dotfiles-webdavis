# vi:filetype=tmux shiftwidth=4 tabstop=4 softtabstop=4:
# Settings. {{{1

# Start window numbering at 0 index.
#set-option -g base-index 0

 # Ensure pane numbering is consistent with windows.
set-option -g pane-base-index 1

set-option -g aggressive-resize
# Don't rename windows after the current program.
set-window-option -g automatic-rename off
set-option -g allow-rename off

# After a window is closed, sequentially update the numbers of the remaining windows.
set-option -g renumber-windows on

# Enable useful window titles.
set-option -g set-titles on
set-option -g set-titles-string "#H | #S:#W | #T"
set-option -g mouse on
set-option -g set-clipboard external
set-option -g history-limit 10000

# Increase the amount of time allowed between repeat presses for bindings enabled with
# "-r". The default is 500 milliseconds.
set-option -g repeat-time 1500

# Overrides tmux-sensible.
set-option -g default-terminal 'tmux-256color'

# Overrides tmux-sensible.
set-option -ga terminal-overrides ",xterm-256color:Tc"

# Update environment variables.
set-option -g update-environment "PATH DISPLAY SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION SSH_TTY WINDOWID XAUTHORITY XDG_CURRENT_DESKTOP XDG_SESSION_DESKTOP"
set-option -s escape-time 0

# Status bar refresh rate.
set-option -g status-interval 7

set-option -g bell-action none


# Colors. {{{1
set -g status "on"
set -g status-justify "left"

set -g display-panes-colour "black"
set -g display-panes-active-colour "blue"

set -g status-fg "colour250"
set -g status-bg "colour237"
set -g status-left "#[fg=colour250,bg=colour237]{#{pid}} [#S] #[fg=colour179,bg=colour237]#P:#{pane_current_command} "
set -g status-left-length "100"
set -g status-right ""
set -g status-right-length "100"

setw -g window-status-separator ""
setw -g window-status-format "#[fg-colour250,bg=colour237] #I:#W #F "
setw -g window-status-current-format "#[fg=colour237,bg=colour250,bold] #I:#W #F "


# Bindings. {{{1

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

bind-key -r C-h select-pane -L
bind-key -r C-j select-pane -D
bind-key -r C-k select-pane -U
bind-key -r L select-pane -R
bind-key -r C-\ select-pane -l

# Change prefix key to "Ctrl + a".
unbind-key C-b
set-option -g prefix C-a

# Passes C-a to the terminal.
bind-key C-a send-keys C-a

# When Ctrl hangs this conflicts with Vim, so stub it out.
bind-key a send-keys a

bind-key C-y next-layout

# Toggle synchronizing input to panes.
bind-key \ set-window-option synchronize-panes\; display-message "synchronize-panes is now #{?pane_synchronized,on,off}"

# Find session.
# bind-key C-f command-prompt -p find-session 'switch-client -t %%'

# Turn mouse on or off.
bind-key m set-option -g mouse

# Backup mappings to change panes when vim-tmux-navigator fails.
bind-key -r M-H select-pane -L
bind-key -r M-J select-pane -D
bind-key -r M-K select-pane -U
bind-key -r M-L select-pane -R

# All kill mappings.
bind-key k kill-pane

# Maximize the current pane.
bind-key M resize-pane -Z

# Combine the current pane with its adjacent pane.
bind-key j join-pane -t !

# vim-tmux-navigator clear-screen workaround.
bind-key C-l send-keys 'C-l'

# Open a tab.
bind-key c new-window -c '#{pane_current_path}'

# Pastes from system clipboard.
bind-key P run "xclip -o -sel clip | tmux load-buffer - ; tmux paste-buffer"

bind-key C-Z suspend-client


# Resize mode. {{{1

# Enter Resize mode.
bind-key r switch-client -T RESIZE

bind-key -T RESIZE k resize-pane -U \; switch-client -T RESIZE
bind-key -T RESIZE j resize-pane -D \; switch-client -T RESIZE
bind-key -T RESIZE h resize-pane -L \; switch-client -T RESIZE
bind-key -T RESIZE l resize-pane -R \; switch-client -T RESIZE

bind-key -T RESIZE K resize-pane -U 5 \; switch-client -T RESIZE
bind-key -T RESIZE J resize-pane -D 5 \; switch-client -T RESIZE
bind-key -T RESIZE H resize-pane -L 5 \; switch-client -T RESIZE
bind-key -T RESIZE L resize-pane -R 5 \; switch-client -T RESIZE


# Plugins. {{{1

# Site: https://github.com/tmux-plugins/tpm {{{2
# Plugin manager.
#
# Bindings:
#   prefix + I -- installs plugins and refreshes tmux environment.
#   prefix + alt-u -- uninstalls plugins.
#   prefix + U -- updates plugins.
set-option -g @plugin 'tmux-plugins/tpm'


# Site: https://github.com/tmux-plugins/tmux-sensible tmux-sensible {{{2
# Acceptable settings that everyone can agree on.
set-option -g @plugin 'tmux-plugins/tmux-sensible'


# Site: https://github.com/tmux-plugins/tmux-open {{{2
# Opens highlighted selection directly from tmux copy mode.
#
# Bindings:
#   o -- open highlighted selection with system default program.
#   ctrl-o -- open highlighted selection with $EDITOR.
#   S -- search highlighted selection in a search engine (Google).
set-option -g @plugin 'tmux-plugins/tmux-open'


# Site: https://github.com/wfxr/tmux-fzf-url {{{2
# Use fzf to quickly open urls in the browser.
set-option -g @plugin 'wfxr/tmux-fzf-url'
set -g @fzf-url-bind 'x'


# Site: https://github.com/tmux-plugins/tmux-yank {{{2
# Copy to system clipboard in tmux.
#
# Bindings:
#   Y -- Yank and paste selection to cli (copy-mode).
#   prefix + y -- yank current command line to clipboard.
#   prefix + Y -- yank PWD to clipboard.
set-option -g @plugin 'tmux-plugins/tmux-yank'


# Site: https://github.com/Morantron/tmux-fingers {{{2
# Copy pasting with vimium/vimperator like hints.
#
# Bindings:
#   Vimium like yanking: prefix + F
set-option -g @plugin 'Morantron/tmux-fingers'


# Site: https://github.com/tmux-plugins/tmux-copycat {{{2
# regex searches, result highlighting, and predefined searches.
#
# Bindings:
#   prefix + ctrl-f -- highlight last file.
#   prefix + ctrl-g -- highlight last git status file.
#   prefix + alt-h -- highlight last SHA-1 hash.
#   prefix + ctrl-u -- highlight last URL.
#   prefix + ctrl-d -- highlight last number.
#   prefix + alt-i -- highlight last ip address.
set-option -g @plugin 'tmux-plugins/tmux-copycat'


# Site: https://github.com/tmux-plugins/tmux-sessionist {{{2
# Manipulate tmux sessions.
#
# Bindings:
#   prefix + g -- prompt session name and switch to it.
#   prefix + C -- prompt for creating new session by name.
#   prefix + X -- kill current session without detaching tmux.
#   prefix + S -- switch to last session.
#   prefix + @ -- promote current pane to new session.
#   prefix + t<secondary-key> -- join currently marked pane (prefix + m) to current session/window, and switch to it.
#
#   secondary-keys:
#       h, -, " -- join horizontally
#       v, |, % -- join vertically
#       f, @ -- join full screen
set-option -g @plugin 'tmux-plugins/tmux-sessionist'


# Site: https://github.com/tmux-plugins/tmux-resurrect {{{2
# Restore tmux environments after system restart.
#
# Captures and restores pane contents
set-option -g @resurrect-capture-pane-contents 'on'
# Restore vim-state in tmux using vim-obsession.
set-option -g @resurrect-strategy-vim 'session'
set-option -g @resurrect-strategy-nvim 'session'
set-option -g @plugin 'tmux-plugins/tmux-resurrect'


# Site: https://github.com/tmux-plugins/tmux-continuum {{{2
# Continuous saving of tmux environments.
# Auto-save state.
set-option -g @plugin 'tmux-plugins/tmux-continuum'
set-option -g @continuum-restore 'on'

# Automatically install TPM if it isn't already.
if 'test ! -d ~/.tmux/plugins/tpm -a "$(command -v git)" != ""' \
  'run "git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/tpm && ~/.tmux/plugins/tpm/bin/install_plugins"'

# Initialize tmux plugin manager (keep this line at the very bottom of tmux.conf). {{{2
run '~/.tmux/plugins/tpm/tpm'
